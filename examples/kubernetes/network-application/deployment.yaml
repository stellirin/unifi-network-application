apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: unifi
  name: network-application
  labels:
    app: network-application
spec:
  replicas: 1
  selector:
    matchLabels:
      app: network-application
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        instrumentation.opentelemetry.io/inject-java: "opentelemetry/grpc"
        instrumentation.opentelemetry.io/container-names: "network-application"
      labels:
        app: network-application
    spec:
      affinity:
        nodeAffinity:
          # Run on the master node
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: node-role.kubernetes.io/master
                    operator: In
                    values:
                      - "true"
      containers:
        - name: network-application
          image: ghcr.io/stellirin/unifi-network-application:latest
          imagePullPolicy: Always
          ports:
            # UniFi
            - name: discoverable
              hostPort: 1900
              containerPort: 1900
              protocol: UDP
            - name: stun
              hostPort: 3478
              containerPort: 3478
              protocol: UDP
            - name: logging
              hostPort: 5514
              containerPort: 5514
              protocol: UDP
            - name: speed-test
              hostPort: 6789
              containerPort: 6789
              protocol: TCP
            - name: communication
              hostPort: 8080
              containerPort: 8080
              protocol: TCP
            - name: ui
              hostPort: 8443
              containerPort: 8443
              protocol: TCP
            - name: discovery
              hostPort: 10001
              containerPort: 10001
              protocol: UDP
              # Portal
            - name: http-redirect
              hostPort: 8880
              containerPort: 8880
              protocol: TCP
            - name: http-redirect1
              hostPort: 8881
              containerPort: 8881
              protocol: TCP
            - name: http-redirect2
              hostPort: 8882
              containerPort: 8882
              protocol: TCP
            - name: https-redirect
              hostPort: 8843
              containerPort: 8843
              protocol: TCP
          env:
            - name: MONGO_DB_NAME
              value: "unifi"
            - name: MONGO_DB_HOST
              value: "mongodb.mongodb.svc"
            - name: MONGO_DB_PORT
              value: "27017"
            - name: MONGO_DB_USER
              valueFrom:
                secretKeyRef:
                  name: unifi
                  key: MONGO_DB_USER
            - name: MONGO_DB_PASS
              valueFrom:
                secretKeyRef:
                  name: unifi
                  key: MONGO_DB_PASS
            - name: UNIFI_CA_CERTIFICATE
              value: "/run/secrets/tls/ca.crt"
            - name: UNIFI_TLS_CERTIFICATE
              value: "/run/secrets/tls/tls.crt"
            - name: UNIFI_TLS_PRIVKEY
              value: "/run/secrets/tls/tls.key"
          volumeMounts:
            - name: data
              mountPath: /var/lib/unifi
            - name: tls
              readOnly: true
              mountPath: /run/secrets/tls
          resources:
            requests:
              cpu: 100m
              memory: 512Mi
            limits:
              memory: 1024Mi
          livenessProbe:
            httpGet:
              scheme: HTTP
              host: localhost
              port: 8080
              path: /status
            initialDelaySeconds: 30
            periodSeconds: 15
            timeoutSeconds: 3
          readinessProbe:
            exec:
              command: ["/healthcheck.sh"]
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: network-application
        - name: tls
          csi:
            driver: csi.cert-manager.io
            readOnly: true
            volumeAttributes:
              csi.cert-manager.io/issuer-group: cert-manager.io
              csi.cert-manager.io/issuer-kind: ClusterIssuer
              csi.cert-manager.io/issuer-name: cluster-issuer
              csi.cert-manager.io/common-name: "network-application.unifi"
              csi.cert-manager.io/dns-names: "network-application.unifi.svc,network-application.unifi.svc.cluster.local"
